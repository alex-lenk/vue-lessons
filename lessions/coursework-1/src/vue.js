const App = {
  data: () => ({
    activeIndex: 0, // то, что позволяет определить текущий активный шаг
    isActive: true, // Активны ли шаги
    steps: [
      {
        title: 'Основы',
        text: '1. В блоке вы познакомитесь со всеми основами Vue.js на практике. На протяжении блока мы напишем реактивное приложение, в процессе разработки которого разберем вся базу фреймворка.'
      },
      {
        title: 'Компоненты',
        text: '2. Один из самых важных блоков в курсе, где вы узнаете все о компонентах. В блоке мы напишем 2 разных приложения и создадим более 5 различных UI компонентов как в реальной разработке. Блок расскажет про абсолютно все составляющие, которые есть в компонентах: взаимодействие, slots, асинхронные и динамические компоненты и тонна примеров.'
      },
      {
        title: 'Роутер',
        text: '3. В данном блоке вы узнаете все о том, как работает мультиязычность во Vue. Мы создадим миниклон Gmail в данном блоке, где вы на практике увидите как работать с динамическим роутером.'
      },
      {
        title: 'Vuex',
        text: '4. В блоке вы узнаете абсолютно все про Vuex. Вы узнаете как работать с данными, какие есть лучшие практики по их программированию и структурированию. Все на практике.'
      },
      {
        title: 'Composition',
        text: '5. Одним из наиболее важных обновлений в Vue 3 является появление альтернативного синтаксиса Composition API. В этом блоке вы узнаете все, чтобы полностью пользоваться данными синтаксисом на практических примерах. Помимо этого вы узнаете как работать совместно с Vue Router и Vuex.'
      },
    ]
  }),
  methods: {
    prev() {
      // когда нажимаем кнопку назад
      if (!this.isDisabled) {
        this.activeIndex--
      }
    },
    reset() {
      // начать заново
      this.activeIndex = 0
      return this.isActive = true
    },
    nextOfFinish() {
      // кнопка вперед или закончить
      if (this.activeIndex < this.steps.length - 1) {
        ++this.activeIndex
      } else {
        return this.isActive = false
      }
    },
    setActive(idx) {
      // когда нажимаем на определенный шаг
      if (this.isActive) {
        this.activeIndex = idx
      }
    },
  },
  computed: {
    // тут стоит определить несколько свойств:
    // 1. текущий выбранный шаг
    currentlyStep() {
      return this.activeIndex
    },
    // 2. выключена ли кнопка назад
    isDisabled() {
      return this.activeIndex === 0
    },
    // 3. находимся ли мы на последнем шаге
    isLastStep() {
      return this.steps.length - 1 === this.activeIndex
    },
  }
}

Vue.createApp(App).mount('#app')
